crate = "[" > char < "]"
no_crate = "   " $ null
cargo = crate | no_crate

move =
  "move %(number -> C) from %(numeral -> F) to %(numeral -> T)" $
  {"count": C, "from": F, "to": T}

RejectNull(Array) = Reject(Array, IsNull)

CrateStacks(Labels, CargoRows) =
  RotateTableClockwise(CargoRows) -> CargoCols &
  Map(CargoCols, RejectNull) -> CrateCols &
  ZipIntoObject(Labels, CrateCols)

table_sep(cargo, space, nl) -> CargoRows & ws &
array_sep(numeral, ws) -> Labels & ws &
array_sep(move, nl) -> Steps $
{"stacks": CrateStacks(Labels, CargoRows), "steps": Steps}
