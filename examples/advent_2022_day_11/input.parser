array_sep(monkey, ws)

monkey =
"Monkey %(int->Id):
  Starting items: %(array_sep(int, ", ")->Items)
  Operation: new = %(operation->Operation)
  Test: divisible by %(int->Test)
    If true: throw to monkey %(int->IfTrue)
    If false: throw to monkey %(int->IfFalse)" $
  {
    "id": Id,
    "starting_items": Items,
    "operation": Operation,
    "test": Test,
    "if_true": IfTrue,
    "if_false": IfFalse
  }

operation =
  int | word -> Left & ws &
  token -> Op & ws &
  int | word -> Right $
  {"left": Left, "operator": Op, "right": Right}
